<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
        <SnippetType>SurroundsWith</SnippetType>
      </SnippetTypes>
      <Title>busda</Title>
      <Author>Microsoft Corporation</Author>
      <Description>Code snippet for try catch</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>busda</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>expression</ID>
          <ToolTip>Exception type</ToolTip>
          <Default>
          </Default>
          <Function>SimpleTypeName(global::System.Exception)</Function>
        </Literal>
        <Literal Editable="true">
          <ID>IdException</ID>
          <ToolTip>IdException</ToolTip>
          <Default>-1</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Text</ID>
          <ToolTip>Text</ToolTip>
          <Default>Text</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Tabela</ID>
          <ToolTip>Tabela</ToolTip>
          <Default>Tabela</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Condicao</ID>
          <ToolTip>Condicao</ToolTip>
          <Default>Condicao</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ação</ID>
          <ToolTip>ação</ToolTip>
          <Default>ação</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>tabela</ID>
          <ToolTip>tabela</ToolTip>
          <Default>tabela</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>objeto</ID>
          <ToolTip>objeto</ToolTip>
          <Default>objeto</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Coluna</ID>
          <ToolTip>Colunas</ToolTip>
          <Default>Colunas</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ptr</ID>
          <ToolTip>ptr</ToolTip>
          <Default>ptr</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>NomeDoCadastro</ID>
          <ToolTip>NomeDoCadastro</ToolTip>
          <Default>NomeDoCadastro</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Propriedade</ID>
          <ToolTip>Propriedade</ToolTip>
          <Default>Propriedade</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Entidade</ID>
          <ToolTip>Entidade</ToolTip>
          <Default>Entidade</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>entidade</ID>
          <ToolTip>entidade</ToolTip>
          <Default>entidade</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Script</ID>
          <ToolTip>Script</ToolTip>
          <Default>Script</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>TipoDeDado</ID>
          <ToolTip>TipoDeDado</ToolTip>
          <Default>ToString</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Por</ID>
          <ToolTip>Por</ToolTip>
          <Default>Por</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[       public List<$Entidade$> Buscar$Por$()
        {
            List<$Entidade$> $entidade$List = new List<$Entidade$>();
            $Entidade$ $entidade$ = new $Entidade$();
            SqlConnection cn = new SqlConnection(Conexao.StringDeConexao);
            try
            {
                SqlCommand cmd = new SqlCommand();
                cmd.Connection = cn;
                cmd.CommandText = @"SELECT Id, $Script$ FROM $Entidade$";
                cmd.CommandType = System.Data.CommandType.$Text$;
                
                cn.Open();
                using (SqlDataReader rd = cmd.ExecuteReader())
                {
                    while (rd.Read())
                    {
                        $entidade$.Id = (int)rd["Id"];
                        $entidade$.$Propriedade$ = rd["$Propriedade$"].$TipoDeDado$();
                        $entidade$List.Add($entidade$);
                    }
                }
                return $entidade$List;
            }
            catch (Exception ex)
            {
                throw new Exception("Ocorreu um erro ao tentar buscar $NomeDoCadastro$ no banco de dados.", ex) { Data = { { "Id", $IdException$ } } };
            }
            finally
            {
                cn.Close();
            }
        }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>